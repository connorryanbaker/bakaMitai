TODO:

SEARCH
Quiescence https://www.chessprogramming.org/Quiescence_Search [ ]
Static Exchange Evaluation [ ]
Iterative Deepening https://www.chessprogramming.org/Iterative_Deepening [ ]
Transposition Tables https://www.chessprogramming.org/Transposition_Table [ ]
Killer Moves https://www.chessprogramming.org/Killer_Heuristic [ ]
History Heuristics https://www.chessprogramming.org/History_Heuristic [ ]
Late Move Reduction https://www.chessprogramming.org/Late_Move_Reductions [ ]

MOVEGENERATION
Legal Move Generation with Bitboards to remove need to make / unmake moves to determine legality [ ]
bitboards
- pawn moves [x]
- knight moves [x]
- king moves [x]
- bishop moves [ ]
- rook moves
- queen moves
- attacks
- castling / ep?
- translating bitboard results to move structs
- generating legal moves https://www.chessprogramming.org/Bitboard_Serialization
- for each piece (not pawns?), generate array of 64 bitboards w/ a1 as 0 and h8
  as 63 at startup time


UI
UCI [ ]

Misc
PGN export edge cases [ ]
Look into avoiding repetitions in winning positions [ ]
Missing checkmates [ ]
